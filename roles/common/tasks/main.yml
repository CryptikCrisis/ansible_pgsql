---
# tasks file for common
- name: Common system config
  tags: common_system_config
  block:

    - name: Set timezone
      community.general.timezone:
        name: Australia/Sydney

    - name: Check if server is already registered with a Red Hat Account
      ansible.builtin.command:
        cmd: 'subscription-manager register'
      register: subscription_status
      failed_when: false

    - name: Print return information from the previous task
      ansible.builtin.debug:
        var: subscription_status.stdout_lines
        verbosity: 1

    - name: Register with Red Hat Account
      community.general.redhat_subscription:
        state: present
        activationkey: activation-key-default
        org_id: 13951093
        release: 9.4

#    - name: Register to Red Hat insights
#      ansible.builtin.command:
#        cmd: insights-client --register

    - name: Install Common Packages
      ansible.builtin.dnf:
        name: firewalld, python3-firewall, tuned, lvm2
        state: present

    - name: Start firewalld
      ansible.builtin.systemd_service:
        name: firewalld
        state: started
        enabled: true

    - name: Enable postgresql firewall rule
      ansible.posix.firewalld:
        service: postgresql
        state: enabled
        permanent: true
        immediate: true

- name: Provision data disk
  tags: create_disk
  block:

    - name: Create the folder to mount to
      ansible.builtin.file:
        path: "{{ data_disk_path }}"
        state: directory
        mode: "0755"
        owner: root
        group: root

    - name: Create a volume group on top of the physical data disk
      community.general.lvg:
        pvs: "{{ data_disk_physical }}"
        pvresize: true
        state: present
        vg: pgsql

    - name: Create a logical volume for pgsql data
      community.general.lvol:
        lv: pgsql_data
        vg: pgsql
        size: 149.99G
        active: true
        state: present

    - name: Create a xfs filesystem on the logical volume
      community.general.filesystem:
        fstype: xfs
        dev: /dev/mapper/pgsql-pgsql_data
        state: present

    - name: Get data disk UUID
      ansible.builtin.command:
        cmd: blkid --match-tag UUID --output value /dev/mapper/pgsql-pgsql_data
      register: data_disk_UUID
      changed_when: false

    - name: Print return information from the previous task
      ansible.builtin.debug:
        var: data_disk_UUID.stdout_lines
        verbosity: 2
    
    - name: Add entry to fstab
      ansible.posix.mount:
        path: "{{ data_disk_path }}"
        src: UUID={{ data_disk_UUID.stdout }}
        boot: true
        fstype: xfs
        state: mounted
        opts: defaults

    - name: Relabel SELinux on the new drive
      ansible.builtin.command:
        cmd: /sbin/restorecon -R -v {{ data_disk_path | quote }}

    - name: Reboot machine and send a message
      ansible.builtin.reboot:
        msg: "Rebooting machine in 5 seconds"
